{"version":3,"sources":["components/TodoTemplate.js","components/TodoInsert.js","components/TodolistItem.js","components/Todolist.js","App.js","reportWebVitals.js","index.js"],"names":["TodoTemplate","children","className","TodoInsert","onInsert","useState","value","setValue","onChange","useCallback","e","target","onSubmit","preventDefault","placeholder","type","TodolistItem","todo","onRemove","onToggle","id","text","checked","cn","onClick","Todolist","todos","map","App","setTodos","nextId","useRef","current","check","concat","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAYeA,EATK,SAAC,GAAc,IAAbC,EAAY,EAAZA,SAClB,OACI,sBAAKC,UAAU,eAAf,UACI,qBAAKA,UAAU,YAAf,uBACA,qBAAKA,UAAU,UAAf,SAA0BD,QC8BnBE,G,MA9BD,SAAC,GAAe,IAAdC,EAAa,EAAbA,SAChB,EAAsBC,mBAAS,IAA/B,mBAAMC,EAAN,KAAYC,EAAZ,KAEMC,EAAUC,uBAAY,SAAAC,GACxBH,EAASG,EAAEC,OAAOL,SACnB,IAGGM,EAAWH,uBACb,SAAAC,GACIN,EAASE,GACTC,EAAS,IACTG,EAAEG,mBAEN,CAACT,EAASE,IAGd,OACH,uBAAMJ,UAAU,aAAaU,SAAUA,EAAvC,UACI,uBAAOE,YAAY,qDACZR,MAAOA,EACPE,SAAUA,IAEb,wBAAQO,KAAK,SAAb,sB,uBCFMC,G,MAlBK,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,KAAKC,EAAsB,EAAtBA,SAASC,EAAa,EAAbA,SACzBC,EAAkBH,EAAlBG,GAAGC,EAAeJ,EAAfI,KAAMC,EAASL,EAATK,QAChB,OACI,sBAAKpB,UAAU,eAAf,UACG,sBAAKA,UAAWqB,IAAG,WAAY,CAACD,YAAWE,QAAS,kBAAKL,EAASC,IAAlE,UACFE,EAAS,cAAC,IAAD,IAAc,cAAC,IAAD,IACxB,qBAAKpB,UAAU,OAAf,SAAuBmB,OAIpB,qBAAKnB,UAAU,SAAQsB,QAAS,kBAAIN,EAASE,IAA7C,SACI,cAAC,IAAD,WCHAK,G,MAdA,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,MAAOR,EAAqB,EAArBA,SAASC,EAAY,EAAZA,SACjC,OACA,qBAAKjB,UAAU,WAAf,SAEKwB,EAAMC,KAAI,SAAAV,GAAI,OACX,cAAC,EAAD,CAAcA,KAAMA,EAAoBC,SAAUA,EAClDC,SAAUA,GADqBF,EAAKG,WCoD7BQ,EAxDL,WAKR,MAAuBvB,mBAAS,IAAhC,mBAAOqB,EAAP,KAAaG,EAAb,KAKMC,EAAOC,iBAAO,GAEd3B,EAAUK,uBACd,SAAAY,GACE,IAAMJ,EAAO,CACXG,GAAIU,EAAOE,QACXX,OACAY,OAAO,GAEXJ,EAASH,EAAMQ,OAAOjB,IACtBa,EAAOE,SAAU,IAGjB,CAACN,IAIGR,EAAST,uBACb,SAAAW,GACES,EAASH,EAAMS,QAAO,SAAAlB,GAAI,OAAEA,EAAKG,KAAKA,QAExC,CAACM,IAGGP,EAASV,uBACb,SAAAW,GACES,EACEH,EAAMC,KAAI,SAAAV,GAAI,OACZA,EAAKG,KAAKA,EAAV,2BAAkBH,GAAlB,IAAwBK,SAAUL,EAAKK,UAAWL,QAIxD,CAACS,IAKH,OAAO,eAAC,EAAD,WACL,cAAC,EAAD,CAAYtB,SAAUA,IACtB,cAAC,EAAD,CAAUsB,MAAOA,EAAOR,SAAUA,EAAUC,SAAUA,QC1C3CiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1fcac871.chunk.js","sourcesContent":["import React from 'react';\r\nimport './TodoTemplate.css';\r\n\r\nconst TodoTemplate =({children})=>{\r\n    return(\r\n        <div className=\"TodoTemplate\">\r\n            <div className=\"app-title\">TODO LIST</div>\r\n            <div className=\"content\">{children}</div>\r\n        </div>\r\n    );\r\n    \r\n};\r\nexport default TodoTemplate;","import React ,{useState, useCallback} from 'react';\r\n\r\nimport { MdOutlineInsertChart } from 'react-icons/md';\r\nimport './TodoInsert.css';\r\n\r\n\r\n\r\nconst TodoInsert= ({onInsert})=> {\r\n    const[value,setValue]=useState('');\r\n\r\n    const onChange= useCallback(e=> {\r\n        setValue(e.target.value);\r\n    }, []);\r\n\r\n\r\n    const onSubmit = useCallback(\r\n        e=> {\r\n            onInsert(value);\r\n            setValue('');\r\n            e.preventDefault();\r\n        },\r\n        [onInsert,value],\r\n    );\r\n\r\n    return(\r\n <form className=\"TodoInsert\" onSubmit={onSubmit}>\r\n     <input placeholder=\"할 일을 입력하세요\"\r\n            value={value}\r\n            onChange={onChange}\r\n            />\r\n         <button type=\"submit\">ADD\r\n         </button>\r\n    \r\n </form>\r\n    );\r\n    };\r\n\r\n    export default TodoInsert;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {\r\n    MdCheckBoxOutlineBlank,\r\n   MdCheckBox,\r\n    MdRemoveCircleOutline,\r\n   \r\n}from 'react-icons/md';\r\nimport cn from 'classnames';\r\nimport './TodolistItem.css';\r\n\r\nconst TodolistItem =({todo,onRemove,onToggle})=> {\r\n    const {id,text, checked}=todo;\r\n    return(\r\n        <div className=\"TodolistItem\">\r\n           <div className={cn('checkbox', {checked})} onClick={()=> onToggle(id)}>\r\n        {checked? <MdCheckBox/>:<MdCheckBoxOutlineBlank/>}\r\n        <div className=\"text\">{text}</div>\r\n        </div>\r\n          \r\n\r\n           <div className=\"remove\"onClick={()=>onRemove(id)}>\r\n               <MdRemoveCircleOutline/>\r\n           </div>\r\n           </div>\r\n    );\r\n};\r\n\r\n\r\nexport default TodolistItem;","import React from 'react';\r\nimport TodolistItem from './TodolistItem';\r\nimport './Todolist.css';\r\n\r\nconst Todolist=({todos, onRemove,onToggle})=>{\r\nreturn(\r\n<div className=\"Todolist\">\r\n\r\n    {todos.map(todo =>(\r\n        <TodolistItem todo={todo} key={todo.id} onRemove={onRemove}\r\n        onToggle={onToggle}\r\n        />\r\n    ))}\r\n   \r\n</div>\r\n);\r\n};\r\n\r\nexport default Todolist;","import React, {useState,useRef,useCallback} from 'react';\nimport TodoTemplate from './components/TodoTemplate';\nimport TodoInsert from './components/TodoInsert';\nimport Todolist from './components/Todolist';\n\nconst App=()=>{\n\n\n\n  \n  const [todos,setTodos]=useState([\n    \n  ]);\n\n\n  const nextId=useRef(4);\n  \n  const onInsert= useCallback(\n    text=> {\n      const todo = {\n        id: nextId.current,\n        text,\n        check: false,\n      };\n    setTodos(todos.concat(todo));\n    nextId.current +=1;\n    \n    },\n    [todos],\n  );\n\n\n  const onRemove=useCallback(\n    id=> {\n      setTodos(todos.filter(todo=>todo.id!==id));\n    },\n    [todos],\n  );\n\n  const onToggle=useCallback(\n    id=> {\n      setTodos(\n        todos.map(todo=>\n          todo.id===id? {...todo, checked: !todo.checked }: todo,\n          ),\n      );\n    },\n    [todos],\n  );\n\n\n\n  return(<TodoTemplate>\n    <TodoInsert onInsert={onInsert}/>\n    <Todolist todos={todos} onRemove={onRemove} onToggle={onToggle}/>\n  </TodoTemplate>\n  );\n};\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}